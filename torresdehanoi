import tkinter as tk
import time

class TorreHanoiGUI:
    def __init__(self, master, num_discos):
        """
        Inicializa la interfaz y los parámetros principales.
        """
        self.master = master
        self.master.title("Torres de Hanoi")
        self.num_discos = num_discos
        self.canvas = tk.Canvas(self.master, width=600, height=400, bg='white')
        self.canvas.pack()

        # Posiciones de las tres torres
        self.torres_x = [100, 300, 500]
        self.torres = [[], [], []]  # Cada torre es una lista de discos

        self.radio_torre = 10
        self.altura_base = 350

        # Crear los discos en la torre 0
        for i in range(num_discos, 0, -1):
            self.torres[0].append(i)

        self.dibujar_torres()
        self.master.after(1000, self.iniciar)

    def dibujar_torres(self):
        """
        Dibuja las torres y los discos en el lienzo.
        """
        self.canvas.delete("all")

        # Dibuja las 3 torres
        for x in self.torres_x:
            self.canvas.create_rectangle(x - 5, 150, x + 5, self.altura_base, fill="black")

        # Dibuja los discos en cada torre
        for i in range(3):
            torre = self.torres[i]
            for j, disco in enumerate(torre):
                ancho = disco * 15
                x_centro = self.torres_x[i]
                y = self.altura_base - j * 20
                self.canvas.create_rectangle(
                    x_centro - ancho,
                    y - 15,
                    x_centro + ancho,
                    y,
                    fill="skyblue"
                )
                self.canvas.create_text(x_centro, y - 8, text=str(disco), font=("Arial", 10, "bold"))

        self.master.update()
        time.sleep(0.5)

    def mover_disco(self, origen, destino):
        """
        Mueve un disco visualmente de una torre a otra.
        """
        disco = self.torres[origen].pop()
        self.torres[destino].append(disco)
        self.dibujar_torres()

    def resolver_hanoi(self, n, origen, auxiliar, destino):
        """
        Función recursiva que implementa el algoritmo de las Torres de Hanoi.
        """
        if n == 1:
            self.mover_disco(origen, destino)
        else:
            self.resolver_hanoi(n - 1, origen, destino, auxiliar)
            self.mover_disco(origen, destino)
            self.resolver_hanoi(n - 1, auxiliar, origen, destino)

    def iniciar(self):
        """
        Inicia la resolución del problema.
        """
        self.resolver_hanoi(self.num_discos, 0, 1, 2)


# Punto de entrada del programa
if __name__ == "__main__":
    try:
        discos = int(input("Ingrese el número de discos: "))
        if discos <= 0:
            raise ValueError("El número debe ser mayor que cero.")

        ventana = tk.Tk()
        app = TorreHanoiGUI(ventana, discos)
        ventana.mainloop()
    except ValueError as e:
        print(f"Error: {e}")
